{"version":3,"sources":["ng://xng-breadcrumb/lib/breadcrumb-item.directive.ts","node_modules/tslib/tslib.es6.js","ng://xng-breadcrumb/lib/breadcrumb.service.ts","ng://xng-breadcrumb/lib/breadcrumb.component.ts","ng://xng-breadcrumb/lib/breadcrumb.module.ts"],"names":["BreadcrumbItemDirective","Directive","args","selector","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","BreadcrumbService","set","pathOrAlias","breadcrumb","validateArguments","label","startsWith","updateStore","alias","slice","breadcrumbExtraProps","buildRouteRegExp","setBaseBreadcrumb","baseConfig","router","config","find","pathConfig","path","data","_a","getBreadcrumbOptions","_b","skip","info","_c","disable","isAutoGeneratedLabel","baseBreadcrumb","routeLink","baseHref","detectRouteChanges","_this","events","pipe","filter","event","NavigationEnd","distinctUntilChanged","subscribe","previousBreadcrumbs","currentBreadcrumbs","prepareBreadcrumbList","activatedRoute","root","routeLinkPrefix","routeConfig","breadcrumbItem","prepareBreadcrumbItem","firstChild","breadcrumbsToShow","item","breadcrumbs","parseRouteData","resolvedPath","resolvePathParam","getFromStore","resolveQueryParam","mergeWithBaseChildData","breadcrumbAlias","matchingItem","dynamicBreadcrumbStore","routeRegex","RegExp","test","includes","pathParamPrefix","replace","pathParamRegexIdentifier","pathParamRegexReplacer","getBreadcrumbIndexes","breadcrumbItemIndex","storeItemIndex","__spread","concat","indexMap","getBreadcrumbIndexesByType","key","findIndex","snapshot","params","previousBreadcrumb","queryParams","fragment","keys","loadChildren","baseChild","_loadedConfig","routes","route","children","undefined","console","Injectable","providedIn","ActivatedRoute","Router","BehaviorSubject","breadcrumbs$","asObservable","BreadcrumbComponent","defineProperty","_separator","TemplateRef","separatorTemplate","ngOnInit","subscription","breadcrumbService","map","preserveQueryParams","split","autoGenerate","ngOnDestroy","unsubscribe","Component","template","encapsulation","ViewEncapsulation","None","ContentChild","static","read","Input","class","BreadcrumbModule","NgModule","declarations","imports","CommonModule","RouterModule","exports"],"mappings":"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","sourcesContent":["import { Directive } from '@angular/core';\n\n/**\n * This directive is used to customize the breadcrumb label behavior\n * *xngBreadcrumbItem directive can be used in the child element of xng-breadcrumb\n * Usage: refer to demo app.component.html\n */\n@Directive({\n  selector: '[xngBreadcrumbItem]'\n})\nexport class BreadcrumbItemDirective {\n  constructor() {}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { Breadcrumb } from './breadcrumb';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService {\n  /**\n   * breadcrumb label for base OR root path. Usually, this can be set as 'Home'\n   */\n  private baseBreadcrumb: Breadcrumb;\n\n  private baseHref = '/';\n\n  /**\n   * dynamicBreadcrumbStore holds information about dynamically updated breadcrumbs.\n   * Breadcrumbs can be set from anywhere (component, service) in the app.\n   * On every breadcrumb update check this store and use the info if available.\n   */\n  private dynamicBreadcrumbStore: Breadcrumb[] = [];\n\n  /**\n   * breadcrumbList for the current route\n   * When breadcrumb info is changed dynamically, check if the currentBreadcrumbs is effected\n   * If effected, update the change and emit a new stream\n   */\n  private currentBreadcrumbs: Breadcrumb[] = [];\n  private previousBreadcrumbs: Breadcrumb[] = [];\n\n  /**\n   * Breadcrumbs observable to be subscribed by BreadcrumbComponent\n   * Emits on every route change OR dynamic update of breadcrumb\n   */\n  private breadcrumbs = new BehaviorSubject<Breadcrumb[]>([]);\n  public breadcrumbs$ = this.breadcrumbs.asObservable();\n\n  private pathParamPrefix = ':';\n  private pathParamRegexIdentifier = '/:[^/]+';\n  private pathParamRegexReplacer = '/[^/]+';\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    this.setBaseBreadcrumb();\n    this.detectRouteChanges();\n  }\n\n  /**\n   * Update breadcrumb label or options for -\n   *\n   * route (complete route path). route can be passed the same way you define angular routes\n   * 1) update label Ex: set('/mentor', 'Mentor'), set('/mentor/:id', 'Mentor Details')\n   * 2) change visibility Ex: set('/mentor/:id/edit', { skip: true })\n   * 3) add info Ex: set('/mentor/:id/edit', { info: { icon: 'edit', iconColor: 'blue' } })\n   * ------------------------ OR -------------------------\n   *\n   * alias (prefixed with '@'). breadcrumb alias is unique for a route\n   * 1) update label Ex: set('@mentor', 'Enabler')\n   * 2) change visibility Ex: set('@mentorEdit', { skip: true })\n   * 3) add info Ex: set('@mentorEdit', { info: { icon: 'edit', iconColor: 'blue' } })\n   */\n  set(pathOrAlias: string, breadcrumb: string | Breadcrumb) {\n    if (!this.validateArguments(pathOrAlias, breadcrumb)) {\n      return;\n    }\n\n    if (typeof breadcrumb === 'string') {\n      breadcrumb = {\n        label: breadcrumb\n      };\n    }\n\n    if (pathOrAlias.startsWith('@')) {\n      this.updateStore({ ...breadcrumb, alias: pathOrAlias.slice(1) });\n    } else {\n      const breadcrumbExtraProps = this.buildRouteRegExp(pathOrAlias);\n      this.updateStore({ ...breadcrumb, ...breadcrumbExtraProps });\n    }\n  }\n\n  private setBaseBreadcrumb() {\n    const baseConfig = this.router.config.find(pathConfig => pathConfig.path === '');\n    if (baseConfig && baseConfig.data) {\n      let { label, alias, skip = false, info, disable = false } = this.getBreadcrumbOptions(baseConfig.data);\n\n      let isAutoGeneratedLabel = false;\n      if (typeof label !== 'string' && !label) {\n        label = '';\n        isAutoGeneratedLabel = true;\n      }\n\n      this.baseBreadcrumb = {\n        label,\n        alias,\n        skip,\n        disable,\n        info,\n        routeLink: this.baseHref,\n        isAutoGeneratedLabel\n      };\n    }\n  }\n\n  /**\n   * Whenever route changes build breadcrumb list again\n   */\n  private detectRouteChanges() {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        distinctUntilChanged()\n      )\n      .subscribe(event => {\n        this.previousBreadcrumbs = this.currentBreadcrumbs;\n\n        this.currentBreadcrumbs = this.baseBreadcrumb ? [this.baseBreadcrumb] : [];\n        this.prepareBreadcrumbList(this.activatedRoute.root, this.baseHref);\n      });\n  }\n\n  private prepareBreadcrumbList(activatedRoute: ActivatedRoute, routeLinkPrefix: string): Breadcrumb[] {\n    if (activatedRoute.routeConfig && activatedRoute.routeConfig.path) {\n      const breadcrumbItem = this.prepareBreadcrumbItem(activatedRoute, routeLinkPrefix);\n      this.currentBreadcrumbs.push(breadcrumbItem);\n\n      if (activatedRoute.firstChild) {\n        return this.prepareBreadcrumbList(activatedRoute.firstChild, breadcrumbItem.routeLink + '/');\n      }\n    } else if (activatedRoute.firstChild) {\n      return this.prepareBreadcrumbList(activatedRoute.firstChild, routeLinkPrefix);\n    }\n    // remove breadcrumb items that needs to be hidden or don't have a label\n    const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n\n    this.breadcrumbs.next(breadcrumbsToShow);\n  }\n\n  private prepareBreadcrumbItem(activatedRoute: ActivatedRoute, routeLinkPrefix: string): Breadcrumb {\n    const { path, breadcrumb } = this.parseRouteData(activatedRoute.routeConfig);\n\n    // in case of path param get the resolved for param\n    const resolvedPath = this.resolvePathParam(path, activatedRoute);\n    const routeLink = `${routeLinkPrefix}${resolvedPath}`;\n\n    let { label, alias, skip, disable, info } = this.getFromStore(breadcrumb.alias, routeLink);\n    let isAutoGeneratedLabel = false;\n\n    if (typeof label !== 'string') {\n      if (typeof breadcrumb.label === 'string') {\n        label = breadcrumb.label;\n      } else {\n        label = resolvedPath;\n        isAutoGeneratedLabel = true;\n      }\n    }\n\n    return {\n      label,\n      alias: alias || breadcrumb.alias,\n      skip: skip || breadcrumb.skip,\n      disable: disable || breadcrumb.disable,\n      info: info || breadcrumb.info,\n      routeLink,\n      isAutoGeneratedLabel,\n      ...this.resolveQueryParam(routeLink, activatedRoute)\n    };\n  }\n\n  /**\n   * For a specific route, breadcrumb can be defined either on parent data OR it's child(which has empty path) data\n   * When both are defined, child takes precedence\n   *\n   * Ex: Below we are setting breadcrumb on both parent and child.\n   * So, child takes precedence and \"Defined On Child\" is displayed for the route 'home'\n   * { path: 'home', loadChildren: './home/home.module#HomeModule' , data: {breadcrumb: \"Defined On Module\"}}\n   *                                                AND\n   * children: [\n   *   { path: '', component: ShowUserComponent, data: {breadcrumb: \"Defined On Child\" }\n   * ]\n   */\n  private parseRouteData(routeConfig) {\n    const { path, data = {} } = routeConfig;\n    const breadcrumb = this.mergeWithBaseChildData(routeConfig, { ...data });\n\n    return { path, breadcrumb };\n  }\n\n  private getFromStore(breadcrumbAlias: string, routeLink: string): Breadcrumb {\n    let matchingItem;\n    if (breadcrumbAlias) {\n      matchingItem = this.dynamicBreadcrumbStore.find(item => item.alias === breadcrumbAlias);\n    }\n\n    if (!matchingItem && routeLink) {\n      matchingItem = this.dynamicBreadcrumbStore.find(item => {\n        return (item.routeLink && item.routeLink === routeLink) || (item.routeRegex && new RegExp(item.routeRegex).test(routeLink + '/'));\n      });\n    }\n\n    return matchingItem || {};\n  }\n\n  /**\n   * To update breadcrumb label for a route with path param, we need regex that matches route.\n   * Instead of user providing regex, we help in preparing regex dynamically\n   *\n   * Ex: route declaration - path: '/mentor/:id'\n   * breadcrumbService.set('/mentor/:id', 'Uday');\n   * '/mentor/2' OR 'mentor/ada' we should use 'Uday' as label\n   *\n   * regex string is built, if route has path params(contains with ':')\n   */\n  private buildRouteRegExp(path) {\n    // ensure leading slash is provided in the path\n    if (!path.startsWith('/')) {\n      path = '/' + path;\n    }\n\n    if (path.includes(this.pathParamPrefix)) {\n      // replace mathing path param with a regex\n      // '/mentor/:id' becomes '/mentor/[^/]', which further will be matched in updateStore\n      const routeRegex = path.replace(new RegExp(this.pathParamRegexIdentifier, 'g'), this.pathParamRegexReplacer);\n      return { routeRegex };\n    } else {\n      return { routeLink: path };\n    }\n  }\n\n  /**\n   * Update current breadcrumb definition and emit a new stream of breadcrumbs\n   * Also update the store to reuse dynamic declarations\n   */\n  private updateStore(breadcrumb) {\n    const { breadcrumbItemIndex, storeItemIndex } = this.getBreadcrumbIndexes(breadcrumb);\n\n    // if breadcrumb is present in current breadcrumbs update it and emit new stream\n    if (breadcrumbItemIndex > -1) {\n      this.currentBreadcrumbs[breadcrumbItemIndex] = { ...this.currentBreadcrumbs[breadcrumbItemIndex], ...breadcrumb };\n      const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n      this.breadcrumbs.next([...breadcrumbsToShow]);\n    }\n\n    // If the store already has this route definition update it, else add\n    if (storeItemIndex > -1) {\n      this.dynamicBreadcrumbStore[storeItemIndex] = { ...this.dynamicBreadcrumbStore[storeItemIndex], ...breadcrumb };\n    } else {\n      this.dynamicBreadcrumbStore.push(breadcrumb);\n    }\n  }\n\n  private getBreadcrumbIndexes(breadcrumb): any {\n    const { alias, routeLink, routeRegex } = breadcrumb;\n    let indexMap = {};\n    // identify macthing breadcrumb and store item\n    if (alias) {\n      indexMap = this.getBreadcrumbIndexesByType('alias', alias);\n    } else if (routeLink) {\n      indexMap = this.getBreadcrumbIndexesByType('routeLink', routeLink);\n    } else if (routeRegex) {\n      indexMap = this.getBreadcrumbIndexesByType('routeRegex', routeRegex);\n    }\n    return indexMap;\n  }\n\n  private getBreadcrumbIndexesByType(key: string, value: string) {\n    let breadcrumbItemIndex: number;\n    if (key !== 'routeRegex') {\n      breadcrumbItemIndex = this.currentBreadcrumbs.findIndex(item => value === item[key]);\n    } else {\n      breadcrumbItemIndex = this.currentBreadcrumbs.findIndex(item => new RegExp(value).test(item.routeLink));\n    }\n    const storeItemIndex = this.dynamicBreadcrumbStore.findIndex(item => value === item[key]);\n\n    return { breadcrumbItemIndex, storeItemIndex };\n  }\n\n  private resolvePathParam(path: string, activatedRoute: ActivatedRoute) {\n    // if the path segment is a route param, read the param value from url\n    if (path.startsWith(this.pathParamPrefix)) {\n      return activatedRoute.snapshot.params[path.slice(1)];\n    }\n    return path;\n  }\n\n  private resolveQueryParam(routeLink: string, activatedRoute: ActivatedRoute) {\n    const previousBreadcrumb = this.previousBreadcrumbs.find(item => item.routeLink === routeLink) || {};\n    const { queryParams, fragment } = activatedRoute.snapshot;\n\n    return {\n      queryParams: Object.keys(queryParams).length > 0 ? { ...queryParams } : previousBreadcrumb.queryParams,\n      fragment: fragment || previousBreadcrumb.fragment\n    };\n  }\n\n  /**\n   * get empty children of a module or Component. Empty child is the one with path: ''\n   * When parent and it's children (that has empty route path) define data\n   * merge them both with child taking precedence\n   */\n  private mergeWithBaseChildData(routeConfig, data): Breadcrumb {\n    if (!routeConfig) {\n      return this.getBreadcrumbOptions(data);\n    }\n\n    let baseChild;\n    if (routeConfig.loadChildren) {\n      // To handle a module with empty child route\n      baseChild = routeConfig._loadedConfig.routes.find(route => route.path === '');\n    } else if (routeConfig.children) {\n      // To handle a component with empty child route\n      baseChild = routeConfig.children.find(route => route.path === '');\n    }\n\n    return baseChild && baseChild.data\n      ? this.mergeWithBaseChildData(baseChild, {\n          ...this.getBreadcrumbOptions(data),\n          ...this.getBreadcrumbOptions(baseChild.data)\n        })\n      : this.getBreadcrumbOptions(data);\n  }\n\n  private validateArguments(pathOrAlias, breadcrumb) {\n    if (pathOrAlias === null || pathOrAlias === undefined) {\n      console.error('Invalid first argument. Please pass a route path or a breadcrumb alias.');\n      return false;\n    } else if (breadcrumb === null || breadcrumb === undefined) {\n      console.error('Invalid second argument. Please pass a string or an Object with breadcrumb options.');\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * breadcrumb can be passed a label or an options object\n   * If passed as a string convert to breadcrumb options object\n   */\n  private getBreadcrumbOptions(data) {\n    let { breadcrumb } = data;\n    if (typeof breadcrumb === 'string' || !breadcrumb) {\n      breadcrumb = {\n        label: breadcrumb\n      };\n    }\n    return breadcrumb;\n  }\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { Breadcrumb } from './breadcrumb';\n\n@Component({\n  selector: 'xng-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BreadcrumbComponent implements OnInit {\n  subscription: Subscription;\n  breadcrumbs: Breadcrumb[];\n  breadcrumbs$: Observable<Breadcrumb[]>;\n  separatorTemplate: TemplateRef<void>;\n  private _separator = '/';\n\n  /**\n   * Breadcrumb item can be customized with this template\n   * Template context is provided label, additional info, first and last indexes\n   * Use cases:\n   * 1) Add an icon along with label\n   * 2) i18n. {{breadcrumb | translate}} or {{breadcrumb | transloco}}\n   * 3) Change text case {{breadcrumb | titlecase}}\n   */\n  @ContentChild(BreadcrumbItemDirective, { static: false, read: TemplateRef }) itemTemplate;\n\n  /**\n   * If true, breadcrumb is auto generated even without any mapping label\n   * Default label is same as route segment\n   */\n  @Input() autoGenerate = true;\n\n  /**\n   * By default query params will be preserved with breadcrumbs\n   */\n  @Input() preserveQueryParams = true;\n\n  /**\n   * custom class provided by consumer to increase specificity\n   * This will benefit to override styles that are conflicting\n   */\n  @Input() class = '';\n\n  /**\n   * separator between breadcrumbs, defaults to '/'.\n   * User can customize separator either by passing a String or Template\n   *\n   * String --> Ex: <xng-breadcrumb separator=\"-\"> </xng-breadcrumb>\n   *\n   * Template --> Ex: <xng-breadcrumb [separator]=\"separatorTemplate\"> </xng-breadcrumb>\n   * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>\n   */\n  @Input('separator')\n  set separator(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.separatorTemplate = value;\n      this._separator = undefined;\n    } else {\n      this.separatorTemplate = undefined;\n      this._separator = value || '/';\n    }\n  }\n  get separator() {\n    return this._separator;\n  }\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngOnInit() {\n    this.subscription = this.breadcrumbService.breadcrumbs$.subscribe(breadcrumbs => {\n      this.breadcrumbs = breadcrumbs\n        .map(breadcrumb => {\n          if (!this.preserveQueryParams) {\n            breadcrumb.routeLink = breadcrumb.routeLink.split('?')[0];\n          }\n          return breadcrumb;\n        })\n        .filter(breadcrumb => {\n          // Usually, breadcrumb list can contain a combination of auto generated and user specified labels\n          // this filters autogenerated labels in case of \"[autoGenerate]: false\"\n          if (this.autoGenerate) {\n            return true;\n          }\n          return !breadcrumb.isAutoGeneratedLabel;\n        });\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbComponent, BreadcrumbItemDirective]\n})\nexport class BreadcrumbModule {}\n"]}